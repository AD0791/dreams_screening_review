---
title: "Dreams_Screening_Review"
subtitle: "| Caris Foundation International | Impact Youth Project"
author: "Alexandro Disla | M&E Officer"
---

<style>
body{
  text-align: justify
}
</style>

```{r}
#| label: setup
rm(list=ls())
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(reticulate))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(gt))


#use_virtualenv('r-reticulate')
use_python('/usr/local/opt/python@3.10/bin/python3')

```

```{python}
#| label: Data
#| output: false

from screening import (
    SCREENED,
    ELIGIBLE,
    TOBESERVED,
    SERVED
)
```


## Overview

Notre objectif, ici, est d'avoir une id√©e globale pour le processus d'enrolements et l'eligibilite des AGYW.

Dans cette optique, on va etablir les elements suivants:

- **screened**: Nombre de beneficaires qui ont repondu les questionnaires.

- **eligible**: Nombre de beneficiares qui ont repondu aux questionnaires et ont un score superieur a 14.

- **served**: Nombre de beneficiaires qui ont un code dreams indiquant que les data clercs ont au moins effectues une saisie sur HIVHAITI.

- **to_be_served**: Nombre de beneficiaires qui n'ont pas de code dreams indiquant qu'ils n'ont pas ete saisies.^[
  Deux possibilites, Elles n'ont pas encore ete appelees dans les hubs ou bien les fiches de terrain contenant leur informations n'ont pas encore saisies sur HIVHAITI.
]

## Screened VS Eligible in DREAMS

```{r}
#| label: screened vs eligible
screened_eligible<-data.frame(
  FY18 =c(
    py$SCREENED$FY18,
    py$ELIGIBLE$FY18,
    (py$ELIGIBLE$FY18/py$SCREENED$FY18)*100
  ),
  FY19 =c(
    py$SCREENED$FY19,
    py$ELIGIBLE$FY19,
    (py$ELIGIBLE$FY19/py$SCREENED$FY19)*100
  ),
  FY20 =c(
    py$SCREENED$FY20,
    py$ELIGIBLE$FY20,
    (py$ELIGIBLE$FY20/py$SCREENED$FY20)*100
  ),
  FY21 =c(
    py$SCREENED$FY21,
    py$ELIGIBLE$FY21,
    (py$ELIGIBLE$FY21/py$SCREENED$FY21)*100
  ),
  FY22 =c(
    py$SCREENED$FY22,
    py$ELIGIBLE$FY22,
    (py$ELIGIBLE$FY22/py$SCREENED$FY22)*100
  ),
  FY23 =c(
    py$SCREENED$FY23,
    py$ELIGIBLE$FY23,
    (py$ELIGIBLE$FY23/py$SCREENED$FY23)*100
  )
)
row.names(screened_eligible) <- c("screened", "eligible","% of Agyw enrolled")

screened_eligible%>%
  gt(
    rowname_col = c("screened", "eligible","% of Agyw enrolled"),
    rownames_to_stub=TRUE
  )%>%
  tab_header(
    title = md("**Table 1: Presentation du nombre de beneficiares screenees et enrolees**")
  )%>%tab_stubhead(
    label = md("**mod/year**")
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = "lightgreen"),
      cell_text(color = "white")
      ),
    locations = cells_body(rows = 3)
  ) %>%
  fmt_number(
    columns=1:7,
    decimals = 0
  ) %>%
  tab_source_note(
    source_note = md("**Source: HIVHAITI**")
  )

```

## Eligible VS Served

```{r}
#| label: served vs eligible
eligible_served<-data.frame(
  FY18 =c(
    py$SERVED$FY18,
    py$ELIGIBLE$FY18,
    (py$SERVED$FY18/py$ELIGIBLE$FY18)*100
  ),
  FY19 =c(
    py$SERVED$FY19,
    py$ELIGIBLE$FY19,
    (py$SERVED$FY19/py$ELIGIBLE$FY19)*100
  ),
  FY20 =c(
    py$SERVED$FY20,
    py$ELIGIBLE$FY20,
    (py$SERVED$FY20/py$ELIGIBLE$FY20)*100
  ),
  FY21 =c(
    py$SERVED$FY21,
    py$ELIGIBLE$FY21,
    (py$SERVED$FY21/py$ELIGIBLE$FY21)*100
  ),
  FY22 =c(
    py$SERVED$FY22,
    py$ELIGIBLE$FY22,
    (py$SERVED$FY22/py$ELIGIBLE$FY22)*100
  ),
  FY23 =c(
    py$SERVED$FY23,
    py$ELIGIBLE$FY23,
    (py$SERVED$FY23/py$ELIGIBLE$FY23)*100
  )
)
row.names(eligible_served) <- c("served", "eligible","% of Agyw served")

eligible_served%>%
  gt(
    rowname_col = c("served", "eligible","% of Agyw served"),
    rownames_to_stub=TRUE
  )%>%
  tab_header(
    title = md("**Table 2: Presentation du nombre de beneficiares eligibles et servies**")
  )%>%tab_stubhead(
    label = md("**mod/year**")
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = "lightgreen"),
      cell_text(color = "white")
      ),
    locations = cells_body(rows = 3)
  ) %>%
  fmt_number(
    columns=1:7,
    decimals = 0
  ) %>%
  tab_source_note(
    source_note = md("**Source: HIVHAITI**")
  )

```

## Eligible VS ToBEServed

```{r}
#| label: tobeserved vs eligible
eligible_tobeserved<-data.frame(
  FY18 =c(
    py$TOBESERVED$FY18,
    py$ELIGIBLE$FY18,
    (py$TOBESERVED$FY18/py$ELIGIBLE$FY18)*100
  ),
  FY19 =c(
    py$TOBESERVED$FY19,
    py$ELIGIBLE$FY19,
    (py$TOBESERVED$FY19/py$ELIGIBLE$FY19)*100
  ),
  FY20 =c(
    py$TOBESERVED$FY20,
    py$ELIGIBLE$FY20,
    (py$TOBESERVED$FY20/py$ELIGIBLE$FY20)*100
  ),
  FY21 =c(
    py$TOBESERVED$FY21,
    py$ELIGIBLE$FY21,
    (py$TOBESERVED$FY21/py$ELIGIBLE$FY21)*100
  ),
  FY22 =c(
    py$TOBESERVED$FY22,
    py$ELIGIBLE$FY22,
    (py$TOBESERVED$FY22/py$ELIGIBLE$FY22)*100
  ),
  FY23 =c(
    py$TOBESERVED$FY23,
    py$ELIGIBLE$FY23,
    (py$TOBESERVED$FY23/py$ELIGIBLE$FY23)*100
  )
)
row.names(eligible_tobeserved) <- c("to be served", "eligible","% of Agyw to be served")

eligible_tobeserved%>%
  gt(
    rowname_col = c("to be served", "eligible","% of Agyw to be served"),
    rownames_to_stub=TRUE
  )%>%
  tab_header(
    title = md("**Table 2: Presentation du nombre de beneficiares eligibles et a servir**")
  )%>%tab_stubhead(
    label = md("**mod/year**")
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = "lightgreen"),
      cell_text(color = "white")
      ),
    locations = cells_body(rows = 3)
  ) %>%
  fmt_number(
    columns=1:7,
    decimals = 0
  ) %>%
  tab_source_note(
    source_note = md("**Source: HIVHAITI**")
  )

```

